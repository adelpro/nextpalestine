import saveSVG from '@/components/editor/editorSVGS/save.svg';
import { useQueryClient } from '@tanstack/react-query';
import { POST, QueryKeys } from '@/utils/types';
import Spinner from '@/components/spinner';
import useMePost from '@/hooks/useMePost';
import { cn } from '@/utils/cn';
import Image from 'next/image';
import React from 'react';
type Props = {
  post: POST;
  isNew?: boolean;
};
export default function SaveAction({ post, isNew = false }: Props) {
  const { updateMePostMutation, newMePostMutation } = useMePost();
  const queryClient = useQueryClient();

  function savePost() {
    const { title, excerpt, isPublished, content } = post;
    if (isNew) {
      /**
       * We don't need the id, it's automaticly generated by the backend
       */
      newMePostMutation.mutate({
        title,
        excerpt,
        content,
        isPublished,
      });
      queryClient.invalidateQueries([QueryKeys.MePosts]);
      queryClient.invalidateQueries([QueryKeys.MePost]);
      return;
    }
    /**
     * We don't need the id, it's automaticly extracted from the url param in the router
     */
    updateMePostMutation.mutate({
      title,
      excerpt,
      content,
      isPublished,
    });
  }
  return (
    <button
      onClick={savePost}
      aria-label="Save"
      title="Save"
      type="button"
      disabled={updateMePostMutation.isLoading}
      aria-disabled={updateMePostMutation.isLoading}
      aria-busy={updateMePostMutation.isLoading}
      className={cn(
        'cursor-pointer text-gray-700 m-1 p-1 border-b-2 hover:border-slate-500 transition-all duration-300',
        {
          'bg-slate-100 border border-slate-300 rounded shadow':
            updateMePostMutation.isLoading,
        },
      )}
    >
      {updateMePostMutation.isLoading ? (
        <div className="flex items-center justify-center text-white">
          <Spinner />
        </div>
      ) : (
        <Image src={saveSVG} alt="Save" width={30} height={30} />
      )}
    </button>
  );
}
